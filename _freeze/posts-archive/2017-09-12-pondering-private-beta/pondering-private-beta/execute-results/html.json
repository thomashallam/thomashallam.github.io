{
  "hash": "7044ec96a4d6fa03df698ab43bec0715",
  "result": {
    "markdown": "---\ntitle: Ponderings on Private Beta\nformat:\n  html:\n    code-fold: true\nauthor: Thomas Hallam\ndate: '2017-09-12'\ncategories:\n  - beta\n  - user-research\n  - planning\nimage: stephen-dawson-qwtCeJ5cLYs-unsplash.jpg\nfreeze: true\n---\n\n![](stephen-dawson-qwtCeJ5cLYs-unsplash.jpg)\n  ![Image: [Stephen Dawson](https://unsplash.com/photos/qwtCeJ5cLYs){.external target=\"_blank\"}](stephen-dawson-qwtCeJ5cLYs-unsplash.jpg)\n\n# Ponderings on Private Beta\n\n> Hi all,\n> I’ve been asked my by PO to put out a request about what a good private beta looks like in terms of size, ramp up etc? I would think it would vary from service to service.\n> Any advice / links to examples would be most welcome.\n> Thanks in advance.\n> Jane\n> DS\n\n\n## Reply\n\nReally interesting question. I’ve not seen any formal guidance on it –\n\nI guess my answer would be yes it varies between services. Big enough so you can get some useful insight and Small enough that it is low key and no one notices if you have to pull it?\n\nThe last thing you want for your ‘Private Beta’ service is to spend ages setting up a private beta panel/community only to not have enough users going through to gain any useful insight, this would be very expensive means of testing and validating a thing\n\nFor the new NHS Manage Your Referral Service (part of NHS e-Referral Service). We ran a very very small public beta. The old national service has around 1 million transactions per year, we used a tiny link on the homepage of the old service to redirect about 1% of users, we later made a more prominent link which redirected about 10%.\n\nWe had (for a few months) only a few dozen users per day — around 10% provided survey feedback (5–10 users per day) but the survey and analytics base sizes weren’t robust enough to say if it was statistically an improvement (e.g. Satisfaction/completion rate) over an old service it was due to replace — was this just by chance due to low sample and high margin of error.\n\nWhat you can do though with only a few users is analyse individual users and see why people drop off and the errors and make some informed changes based on analytics / database queries, that needs to be part of the private or public beta plan. Until you scale up you won’t know for sure if the private beta data is robust and the service is cooking on gas as many weird errors/alternative use cases that you won’t find in private beta testing are much less likely to occur with only a handful of users!\n\nI guess it comes back to your service, questions for the PO and UR to think about might be:\n\n* what are the objectives are for private beta?\n* what is the means for validating incremental improvements?\n* is there is a drive/need to go for public beta?\n* how many changes are you planning to test? as you will need much larger numbers e.g. if using AB or multi variate testing,\n* how quickly can the team resolve issues/make changes?\n* when should we scale up? how long will it take to gather * data to validate that it works?\n\nHope this helps!\n\nTom\n\n\n\n\n# Pre-Discovery is a thing.\n\n  > ### I've been asked about: “What is a Pre-Discovery”?\n\nPre-Discovery is helpful for teams working on existing products and services where data can be gathered from internal resources. It should underpin the User Research Discovery themes and will make a big difference to the users approached and the questions asked during Discovery.\n\n**Teams with an existing service will have questions such as:**\n\n* How frequently is our service currently used?\n* What is the demographic of the current user base?\n* What have our users already told us about the current product?\n* What are users pain points?\n* What do users do before arriving in our service?\n* What do users do after using our service?\n* What are the main outcomes from using our service?\n\nTeams should list out the many dozens of questions they may need to answer through Discovery and then assess whether any internal data sources will answer this before kicking off new research.\n\n### Why more Pre-Discovery is helpful\n\nDiscovery is a awesome, challenging and rewarding too. Meeting users, getting immersed in their environment, understanding nuances in their needs. But Discovery is expensive and time consuming so we need to do try and answer questions effectively, in a targeted way.\n\n# Here is my Pre-Discovery checklist:\n* Review all previous research reports and surveys to identify relevant insight about a thing\n* Speak to service desk and review a sample of relevant service tickets\n* Review analytics and performance data for the thing\n* Review business case and benefits case for the thing, to see what benefits we expect users will see\n* Run a quick session with Product, Sales or Implementation team to understand if there is knowledge or previous evidence about the thing\n* Highlight in a service map where the thing sits in relation to other things\n* Evaluate the benefits of fixing the thing\n\n**Teams may say these activities should just happen in Discovery…**\n\nWhile *possibly* true, most teams need to raise funding to pursue Discovery research and delivery projects and Pre-Discovery may be helpful to flesh out the business case and specify some problems to solve.\n\n**Gathering user research evidence for benefits early sets in motion good practice that should be continued through Discovery and Alpha.** This also can help a team quickly surface all the key issues whether they need further understanding.\n\nGathering this data during Pre-Discovery won’t help you to confirm user needs, you will still need depth Discovery research. It also won’t help you identify the best solution, you will also need Alpha research and iterative design .\n\n### More benefits of Pre-Discovery\n\nPre-Discovery gives researchers some time to start thinking about finding the right users and starting recruitment so there is a seamless transition into Discovery when an Agile team may scale out and exploratory research and technical work really kicks off in earnest.\n\nPre-Discovery usually involves a limited number of roles too. A User Researcher, UX Designer, Service Designer and Business Analyst. It can take a few days to a few weeks to gather relevant insights.\n\n### Getting buy in for your Pre-Discovery \n\nShare your Pre-Discovery evidence with key stakeholders and sponsors, to answer the question 'What do we know?', 'What else do we need to know?' and why should we buy into continue into Discovery phasee?\nGive them a flavour of the future: how will their world be better when they know more about how to solve a thing?\n\n**Keeping momentum going**\n\nIf more business cases were based on User Needs and Pre-Discovery evidence with further staged funding towards the end of Discovery/Alpha, there would surely be a lot less disappointment for users and stakeholders when product launches go awry. Less feature commitments will be promised that are later abandoned quietly during Discovery or Alpha, and importantly less irrelevant and implausible features will continue through to live service deployment.\n\nGetting started with UR projects isn’t always easy — Chicken or egg first? How do you complete a Pre-Discovery on the thing without funding or resources? \n\nBreaking the cycle is challenging especially when most teams might already at capacity with their existing commitments.\n\nInnovative organisations embed Pre-Discovery into their standard process for Strategy, Policy and Product. This support alignment at all levels to ensure outcomes are based on both user needs, and business needs.\n\n# How did your Pre-Discovery go?\n\nIf you found this post interesting or useful please comment below :) it would be great to hear your stories of Pre-Discovery!!\n\n",
    "supporting": [
      "pondering-private-beta_files"
    ],
    "filters": [],
    "includes": {}
  }
}